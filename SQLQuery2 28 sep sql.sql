----------Case Study--------------

create table Location (Location_ID int primary key, City varchar(30))

insert into Location values
(122, 'New York'),(123, 'Dallas'),(124, 'Chicago'),(167, 'Boston')

create table department(Department_Id int primary key, Name varchar(30), DLocation_ID intforeign key (DLocation_ID) references location (Location_ID))insert into department values(10, 'Accounting', 122),(20, 'Sales',124),(30, 'Research', 123), (40, 'Operations', 167)create table Job (Job_ID int primary key, Designation varchar(30))insert into job values (667, 'Clerk'),(668, 'Staff'),(669, 'Analyst'),(670, 'Sales Person'),(671, 'Manager'),(672, 'President')

create table employee(employee_id int primary key, last_name varchar(30), first_name varchar(30),middle_name varchar(30), ejob_id int, manager_id int, hire_date date, salary int,comm int, edepartment_id int,foreign key(ejob_id) references job(job_id),foreign key(edepartment_id) references department(department_id))insert into employee values (7369, 'SMITH', 'JOHN', 'Q', 667, 7902, '1984/12/17', 800, NULL, 20),(7499, 'ALLEN', 'KEVIN', 'J', 670, 7698, '1985/02/20', 1600, 300, 30),(7505, 'DOYLE', 'JEAN', 'K', 671, 7839, '1985/04/04', 2850 ,NULL ,30),(7506, 'DENNIS', 'LYNN', 'S', 671, 7839, '1985/05/15' ,2750, NULL, 30),(7507, 'BAKER', 'LESLIE', 'D', 671, 7839, '1985/06/10', 2200, NULL, 40),(7521, 'WARK', 'CYNTHIA', 'D', 670, 7698, '1985/06/20', 1250, 500, 30)sp_rename 'location.location_id','loc_id','column'select * from locationsp_rename 'location.loc_id','location_id','column'--------------Simple Query------------------1. LIST ALL THE EMPLOYEE DETAILselect * from employee--2 LIST ALL THE DEPARTMENT DETAILselect * from department--3 LIST ALL JOB DETAILS.select * from job--4 LIST ALL THE LOCATIONSselect * from Location--5 LIST OUT THE FIRSTNAME, LASTNAME, SALARY, COMMISSION FOR ALL EMPLOYEES.select first_name,  last_name, salary, comm from employee/*6 LIST OUT EMPLOYEEID,LAST NAME, DEPARTMENT ID FOR ALL EMPLOYEES AND ALIAS 
EMPLOYEEID AS "ID OF THE EMPLOYEE", LAST NAME AS "NAME OF THE EMPLOYEE", 
DEPARTMENTID AS "DEP_ID"*/select employee_id as 'ID_OF_THE_EMPLOYEE',last_name as NAME_OF_THE_EMPLOYEE,edepartment_id as DEP_IDfrom employee--7 . LIST OUT THE EMPLOYEES ANNUAL SALARY WITH THEIR NAMES ONLY.select first_name, last_name, salary*12 as Annual_salary from employee-------Where Clause----------------1. LIST THE DETAILS ABOUT "SMITH"select * from employee where 'smith' in (first_name, last_name)--2. LIST OUT THE EMPLOYEES WHO ARE WORKING IN DEPARTMENT 20.select * from employee where edepartment_id = 20 --3 LIST OUT THE EMPLOYEES WHO ARE EARNING SALARY BETWEEN 3000 AND 4500.select * from employee where salary between 3000 and 4500-- salary>3000 and salary<4500--4 LIST OUT THE EMPLOYEES WHO ARE WORKING IN DEPARTMENT 10 OR 20.select * from employee where edepartment_id in (10,20)--5 FIND OUT THE EMPLOYEES WHO ARE NOT WORKING IN DEPARTMENT 10 OR 30.select * from employee where edepartment_id not in (10,30)--6 LIST OUT THE EMPLOYEES WHOSE NAME STARTS WITH 'S'.select * from employee where first_name like 's%'--7 LIST OUT THE EMPLOYEES WHOSE NAME STARTS WITH 'S' AND ENDS WITH 'H'.select * from employee where first_name like 's%' and last_name like '%h'--8 LIST OUT THE EMPLOYEES WHOSE NAME LENGTH IS 4 AND START WITH 'S'.select * from employee where first_name like 's%' and len(first_name) = 4--9 LIST OUT EMPLOYEES WHO ARE WORKING IN DEPARRTMENT 10 AND DRAW THE SALARIES MORE THAN 3500.select * from employee where edepartment_id = 10 and salary > 3500--10 LIST OUT THE EMPLOYEES WHO ARE NOT RECEVING COMMISSIONselect * from employee where comm is null-----------Order By Clause--------------1 . LIST OUT THE EMPLOYEE ID, LAST NAME IN ASCENDING ORDER BASED ON THE EMPLOYEE ID.select employee_id, last_name from employee order by employee_id asc--2. LIST OUT THE EMPLOYEE ID, NAME IN DESCENDING ORDER BASED ON SALARY.select employee_id, first_name,salary from employee order by salary desc--3 LIST OUT THE EMPLOYEE DETAILS ACCORDING TO THEIR LAST-NAME IN ASCENDING ORDER select * from employee order by last_name/*4 LIST OUT THE EMPLOYEE DETAILS ACCORDING TO THEIR LAST-NAME IN ASCENDING ORDER AND 
THEN ON DEPARTMENT_ID IN DESCENDING ORDER.*/select * from employee order by last_name, edepartment_id desc---------------------GROUP BY & HAVING CLAUSE--------------------------1 HOW MANY EMPLOYEES WHO ARE IN DIFFERENT DEPARTMENTS WISE IN THE ORGANIZATION.select edepartment_id, count(*) as count_emp from employee group by edepartment_idselect count(edepartment_id) from employee--2 LIST OUT THE DEPARTMENT WISE MAXIMUM SALARY, MINIMUM SALARY, AVERAGE SALARY OF THE EMPLOYEESselect edepartment_id, max(salary) as max_salary, min(salary) as min_salary, avg(salary) asavg_salary from employee group by edepartment_id--3 LIST OUT JOB WISE MAXIMUM SALARY, MINIMUM SALARY, AVERAGE SALARIES OF THE EMPLOYEESselect ejob_id, max(salary) as max_salary, min(salary) as min_salary, avg(salary) asavg_salary from employee group by ejob_id--4 LIST OUT THE NUMBER OF EMPLOYEES JOINED IN EVERY MONTH IN ASCENDING ORDER.select count(*) as count, month(hire_date) as month from employeegroup by MONTH(hire_date) order by month(hire_date)--5 LIST OUT THE NUMBER OF EMPLOYEES FOR EACH MONTH AND YEAR, IN THE ASCENDING ORDER BASED ON THE YEAR, MONTH.select count(*) as count, datename(MM,hire_date) as month , month(hire_date) as month_int , year(hire_date) as year  from employeegroup by datename(MM,hire_date), year(hire_date), month(hire_date)order by year(hire_date), datename(mm,hire_date)--6 LIST OUT THE DEPARTMENT ID HAVING ATLEAST FOUR EMPLOYEES.select edepartment_id from employee group by edepartment_id having count(*) >= 4--7 HOW MANY EMPLOYEES JOINED IN JANUARY MONTH.select count(*), month(hire_date) as month from employee group by month(hire_date) having month(hire_date) = 6--8 HOW MANY EMPLOYEES JOINED IN JANUARY OR SEPTEMBER MONTH.select month(hire_date) as month, count(*) as count from employeegroup by month(hire_date)having month(hire_date) in (2,9)--9 HOW MANY EMPLOYEES WERE JOINED IN 1985?select year(hire_date) as year, count(*) as count from employee group by year(hire_date)having year(hire_date) = 1985--10 HOW MANY EMPLOYEES WERE JOINED EACH MONTH IN 1985select year(hire_date) as year, month(hire_date) as month, count(*) as count from employee group by year(hire_date), month(hire_date)having year(hire_date) = 1985--11 HOW MANY EMPLOYEES WERE JOINED IN MARCH 1985?select year(hire_date) as year, month(hire_date) as month, count(*) as count from employee group by year(hire_date), month(hire_date)having year(hire_date) = 1985 and month(hire_date) = 6--12 WHICH IS THE DEPARTMENT ID, HAVING GREATER THAN OR EQUAL TO 3 EMPLOYEES JOINED IN APRIL 1985select edepartment_id from employee group by year(hire_date), month(hire_date), edepartment_idhaving year(hire_date) = 1985 and month(hire_date) = 4 and count(*) > = 3-----------------------Joins------------------------------------1 LIST OUT EMPLOYEES WITH THEIR DEPARTMENT NAMES.select e.*, d.Name from employee as einner join department as don e.edepartment_id = d.Department_Id--2 DISPLAY EMPLOYEES WITH THEIR DESIGNATIONS.select e.*, j.Designation from employee einner join job jon e.ejob_id = j.Job_ID--3 DISPLAY THE EMPLOYEES WITH THEIR DEPARTMENT NAMES AND REGIONAL GROUPS.select e.*, d.Name, l.City from employee einner join department don e.edepartment_id = d.Department_Idinner join Location lon d.DLocation_ID = l.location_id--4 HOW MANY EMPLOYEES WHO ARE WORKING IN DIFFERENT DEPARTMENTS AND DISPLAY WITH DEPARTMENT NAMES.select e.edepartment_id, d.Name, count(e.employee_id) as countemp from employee einner join department don e.edepartment_id = d.Department_Idgroup by e.edepartment_id, d.Name--5 HOW MANY EMPLOYEES WHO ARE WORKING IN SALES DEPARTMENT.select e.edepartment_id, d.Name, count(e.employee_id) as countemp from employee einner join department don e.edepartment_id = d.Department_Idwhere d.Name = 'sales'group by e.edepartment_id, d.Name--6 WHICH IS THE DEPARTMENT HAVING GREATER THAN OR EQUAL TO 5 EMPLOYEES AND DISPLAY THE DEPARTMENT NAMES IN ASCENDING ORDER.select e.edepartment_id, d.Name, count(e.employee_id) as countemp from employee einner join department don e.edepartment_id = d.Department_Idgroup by e.edepartment_id, d.Namehaving count(e.employee_id) >= 5order by d.Name--7 HOW MANY JOBS IN THE ORGANIZATION WITH DESIGNATIONS.select j.Designation, count(e.employee_id) as countemp from employee einner join job jon e.ejob_id = j.Job_IDgroup by j.Designation--8 HOW MANY EMPLOYEES ARE WORKING IN "NEW YORK".select l.City, count(e.employee_id) as countemp from employee einner join department don e.edepartment_id = d.Department_Idinner join Location lon d.DLocation_ID = l.location_idwhere l.City = 'dallas'group by l.City--9 DISPLAY THE EMPLOYEE DETAILS WITH SALARY GRADES.select *, salgrade =casewhen salary between 500 and 1000 then 'c'when salary between 1001 and 1500 then 'b'when salary between 1501 and 2000 then 'a'when salary between 2001 and 2500 then 'a+'when salary between 2501 and 3000 then 'o'else 'not found'endfrom employee--10 . LIST OUT THE NO. OF EMPLOYEES ON GRADE WISE.select e.salgrade, count(1) as countgrade from(select *, salgrade =casewhen salary between 500 and 1000 then 'c'when salary between 1001 and 1500 then 'b'when salary between 1501 and 2000 then 'a'when salary between 2001 and 2500 then 'a+'when salary between 2501 and 3000 then 'o'else 'not found'endfrom employee) as egroup by e.salgrade--11  DISPLAY THE EMPLOYEE SALARY GRADES AND NO. OF EMPLOYEES BETWEEN 2000 TO 5000 RANGE OF SALARYselect e.salgrade, count(1) as countgrade from(select *, salgrade =casewhen salary between 500 and 1000 then 'c'when salary between 1001 and 1500 then 'b'when salary between 1501 and 2000 then 'a'when salary between 2001 and 2500 then 'a+'when salary between 2501 and 3000 then 'o'else 'not found'endfrom employeewhere salary between 2000 and 5000) as egroup by e.salgrade--16  DISPLAY ALL EMPLOYEES IN SALES OR OPERATION DEPARTMENTS.select e.*, d.Name from employee einner join department don e.edepartment_id = d.Department_Idwhere d.Name in ('sales','operation')-------------------------left and right joins--------------------------select * from customerselect * from orders    select * from orders oleft join customer con c.customer_id = o.customer_idselect * from customer cright join orders oon c.customer_id = o.customer_idselect * from customer cfull join orders oon c.customer_id = o.customer_id
---------------------------------Operators--------------------- 1. LIST OUT THE DISTINCT JOBS IN SALES AND ACCOUNTING DEPARTMENTSselect distinct ejob_id from employee where edepartment_id = 10unionselect distinct ejob_id from employee where edepartment_id = 20--2. LIST OUT ALL THE JOBS IN SALES AND ACCOUNTING DEPARTMENTS.------unionselect customer_id from customerunionselect customer_id from orders------union allselect customer_id from customerunion allselect customer_id from orders----intersectselect customer_id from customerintersectselect customer_id from orders-----exceptselect customer_id from customerexceptselect customer_id from orders